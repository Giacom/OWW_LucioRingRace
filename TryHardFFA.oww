settings
{
	main
	{
		Description: "TryHard FFA by /u/Giacomand - https://workshop.codes/try-hard-ffa"
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Match Voice Chat: Enabled
		Max Spectators: 4
		Return To Lobby: Never
	}

	modes
	{
		Deathmatch
		{
			Game Length In Minutes: 15
			Score To Win: 50

			enabled maps
			{
				Château Guillard
			}
		}

		General
		{
			Game Mode Start: Immediately
			Hero Limit: Off
			Respawn Time Scalar: 66%
		}
	}

	heroes
	{
		General
		{
			Baptiste
			{
				Immortality Field: Off
			}

			Bastion
			{
				Reconfigure: Off
			}

			Mei
			{
				Primary Fire: Off
			}

			Sombra
			{
				Hack: Off
			}

			Torbjörn
			{
				Deploy Turret: Off
			}

			disabled heroes
			{
				Brigitte
				D.Va
				Doomfist
				Junkrat
				Mercy
				Moira
				Orisa
				Reaper
				Reinhardt
				Roadhog
				Sigma
				Symmetra
				Winston
				Wrecking Ball
				Zarya
			}
		}
	}
}

rule("Global Init")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Objective Description(All Players(All Teams), Custom String("TRY HARD FFA - CODE: RCF13"), Visible To and String);
		Create HUD Text(All Players(All Teams), Null, Custom String("TRY HARD FFA - CODE: RCF13"), Null, Top, -1, White, Red, White,
			Visible To and String, Visible Never);
		Create HUD Text(All Players(All Teams), Null, Null, String("{0}:{1}", Round To Integer(Match Time / 60, Down), Round To Integer(
			Match Time % 60, Down) >= 10 ? Round To Integer(Match Time % 60, Down) : Custom String("0{0}", Round To Integer(
			Match Time % 60, Down))), Top, -0.500, White, White, White, Visible To and String, Visible Never);
	}
}

rule("Player Init")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Disable Game Mode HUD(Event Player);
	}
}

rule("Insta Start")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == False;
		Is Assembling Heroes == True;
	}

	actions
	{
		Set Match Time(5);
	}
}

rule("Set Match Timer To 60 minutes")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
		Is Assembling Heroes == False;
	}

	actions
	{
		Set Match Time(3599);
	}
}

rule("Heal on Kill")
{
	event
	{
		Player Dealt Final Blow;
		All;
		All;
	}

	actions
	{
		Heal(Event Player, Null, Workshop Setting Integer(Custom String("Healing"), Custom String("Heal On Kill"), 200, 0, 1000));
	}
}

rule("Disable Default Functions")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Disable Built-In Game Mode Completion;
		Disable Built-In Game Mode Announcer;
		Disable Built-In Game Mode Music;
	}
}

rule("Match Timer Reaches 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
		Match Time <= 0;
	}

	actions
	{
		Declare Player Victory(Last Of(Sorted Array(All Players(All Teams), Score Of(Current Array Element))));
		Wait(10, Ignore Condition);
		Declare Match Draw;
	}
}
